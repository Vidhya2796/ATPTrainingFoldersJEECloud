package com.quickr.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.quickr.model.UserLoginAccount;
import com.quickr.model.UserRegistrationAccount;
import com.quickr.service.UserService;

@CrossOrigin(origins="http://localhost:4200")
@RestController
@RequestMapping("/quickr")
public class UserController {
	
	@Autowired
private UserService userService;
	
	
	@PostMapping("/users/create")
	public void createUser(@RequestBody UserRegistrationAccount userRegistrationAccount) {
		userService.createUser(userRegistrationAccount);
			
	}
	
	@PostMapping("/users/login")
	public String validateUser(@RequestBody UserLoginAccount userLoginAccount) {
		System.out.println(userService.validateUser(userLoginAccount));
		return userService.validateUser(userLoginAccount);
		
	}
	
	@GetMapping("/users")
	public List<UserRegistrationAccount> getAllUsers() {
		System.out.println("Get all Users...");
		
		return userService.getAllUsers();
	}
	
	@GetMapping("/users/email/{email}")
	public Optional<UserRegistrationAccount> getUserByEmail(@PathVariable String email) {
		System.out.println("Get sprcific User by email...");
		return userService.getUserByEmail(email);
	}
	@DeleteMapping("/users/delete")
	public ResponseEntity<String> deleteAllUsers() {
		System.out.println("Delete All Users...");
 
		return userService.deleteAllUsers();
	}
	

/*	@DeleteMapping("/customers/{id}")
	public ResponseEntity<String> deleteCustomer(@PathVariable("id") String id) {
		System.out.println("Delete Customer with ID = " + id + "...");
 
		repository.deleteById(id);
 
		return new ResponseEntity<>("Customer has been deleted!", HttpStatus.OK);
	}
 
	@DeleteMapping("/customers/delete")
	public ResponseEntity<String> deleteAllCustomers() {
		System.out.println("Delete All Customers...");
 
		repository.deleteAll();
 
		return new ResponseEntity<>("All customers have been deleted!", HttpStatus.OK);
	}*/
	

}
